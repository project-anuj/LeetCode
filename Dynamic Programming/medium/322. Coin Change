class Solution {
public:
    int coinChange(vector<int>& coins, int sum) {
        int n= coins.size();
        int dp[n+1][sum+1];
        memset(dp,-1,sizeof(dp));
	for(int i=0;i<=n;i++)
	{
		for(int j=0;j<=sum;j++)
		{
			if(j==0)
			dp[i][j]=0;
			if(i==0)
			dp[i][j]=INT_MAX-1;
			if(i==1 && j>0)
			if(i%coins[i-1]==0)
			dp[i][j]=i/coins[i-1];
			else
			dp[i][j]=INT_MAX-1;
		}
	}
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=sum;j++)
		{
			if(coins[i-1]>j)
			dp[i][j]=dp[i-1][j];
			else
			dp[i][j]=min(dp[i][j-coins[i-1]]+1,dp[i-1][j]);
		}
	}
    if(dp[n][sum]==INT_MAX||dp[n][sum]==INT_MAX-1)
        return -1;
	return dp[n][sum];

    }
};
