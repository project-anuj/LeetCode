class Solution {
public:
    vector<string> subdomainVisits(vector<string>& cpdomains) {
        vector<string> res;
        map<string,int> mp;
        for(auto x:cpdomains)
        {   string s1="",s2="",s3="",s4="";
            int n;
            for(int i=x.length()-1;i>=0;i--)
            {
                if(x[i]=='.')
                {
                    if(s3.length()==0)
                    {
                        s3=s1;
                        reverse(s3.begin(),s3.end());
                        s1+=string(1,'.');
                    }
                    else if(s2.length()==0)
                    {
                        s2=s1;
                        reverse(s2.begin(),s2.end());
                        s1+=string(1,'.');
                    }
                    else
                        continue;
                }
                else if(x[i]==' ')
                {   i--;
                    while(i>=0)
                    {
                        s4+=string(1,x[i]);
                        i--;
                    }
                 reverse(s4.begin(),s4.end());
                 n=stoi(s4);
                 continue;
                }
                else
                    s1+=string(1,x[i]);
            }
         reverse(s1.begin(),s1.end());
         if(s1.length()>0)
         mp[s1]+=n;
         if(s2.length()>0)
         mp[s2]+=n;
         if(s3.length()>0)
         mp[s3]+=n;
        }
        for(auto x:mp)
        {   
            cout<<x.first<<" "<<x.second<<endl;
            string s=to_string(x.second)+" "+x.first;
            res.push_back(s);
        }
        return res;
    }
};
