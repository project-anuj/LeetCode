//////////// without stack ////////

class Solution {
public:
   bool isValid(string S) {
while (S.size() != 0) {
int rPos = S.find("abc");
if (rPos == std::string::npos) return false;
S.replace(rPos, 3, "");
}
return true;

}
};

/////////// with stack ///////////

class Solution {
public:
bool isValid(string S) {
    stack<char> st;
    for(int i=0;i<S.length();i++)
    {
        if(S[i]=='a'||S[i]=='b')
            st.push(S[i]);
        else{
            if(st.size()<2)
                return false;
            if(S[i]=='c')
            {
                if(st.top()=='b')
                    st.pop();
                else
                    return false;
                if(st.top()=='a')
                    st.pop();
                else
                    return false;
            }
        }
                
    }
    return st.size()==0;

}
};
