class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
    stack<pair<int,int>> s,s1;
    vector<int> left,right;
    for(int i=0;i<heights.size();i++)
    {
        if(s.size()==0)
            left.push_back(-1);
        else if(s.size()>0 && s.top().first<heights[i])
            left.push_back(s.top().second);
        else
        {
            while(s.size()>0&&s.top().first>=heights[i])
                s.pop();
            if(s.size()==0)
                left.push_back(-1);
            else
                left.push_back(s.top().second);
        }
        s.push({heights[i],i});
    }
    for(int i=heights.size()-1;i>=0;i--)
    {
        if(s1.size()==0)
            right.push_back(heights.size());
        else if(s1.size()>0 && s1.top().first<heights[i])
            right.push_back(s1.top().second);
        else
        {
            while(s1.size()>0&&s1.top().first>=heights[i])
                s1.pop();
            if(s1.size()==0)
                right.push_back(heights.size());
            else
                right.push_back(s1.top().second);
        }
        s1.push({heights[i],i});
    }
    reverse(right.begin(),right.end());
    int mx=0;
    for(int i=0;i<left.size();i++)
        mx=max(mx,heights[i]*(right[i]-left[i]-1));
    return mx;
}
    
};
