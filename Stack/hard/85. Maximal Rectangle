class Solution {
public:
    int MAH(vector<int> v)
    {   
        stack<pair<int,int>> st;
        vector<int> left,right;
        for(int i=0;i<v.size();i++)
        {
            if(st.size()==0)
                left.push_back(-1);
            else if(st.size()>0&&st.top().first<v[i])
                left.push_back(st.top().second);
            else
            {
                while(st.size()>0&&st.top().first>=v[i])
                    st.pop();
                if(st.size()==0)
                    left.push_back(-1);
                else
                    left.push_back(st.top().second);
            }
            st.push({v[i],i});
        }
        stack<pair<int,int>> st1;
        for(int i=v.size()-1;i>=0;i--)
        {
            if(st1.size()==0)
                right.push_back(v.size());
            else if(st1.size()>0&&st1.top().first<v[i])
                right.push_back(st1.top().second);
            else
            {
                while(st1.size()>0&&st1.top().first>=v[i])
                    st1.pop();
                if(st1.size()==0)
                    right.push_back(v.size());
                else
                    right.push_back(st1.top().second);
            }
            st1.push({v[i],i});
        }
        reverse(right.begin(),right.end());
        int mx=0;
        for(int i=0;i<v.size();i++)
        {
            mx=max(mx,v[i]*(right[i]-left[i]-1));
        }
        return mx;
    }
    int maximalRectangle(vector<vector<char>>& matrix) {
        if(matrix.size()==0)
            return 0;
        vector<int> v;
        int n=matrix.size();
        int m=matrix[0].size();
        for(int i=0;i<m;i++)
        {   if(matrix[0][i]=='0')
            v.push_back(0);
            else
            v.push_back(1);
        }
        int mx=MAH(v);
        for(int i=1;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(matrix[i][j]=='0')
                    v[j]=0;
                else
                    v[j]+=1;
            }
            mx=max(mx,MAH(v));
        }
        return mx;
    }
};
