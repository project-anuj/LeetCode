class Solution {
public:
    bool static comp(pair<int,int> a,pair<int,int> b)
    {
        return a.second<b.second||((a.second==b.second)&& a.first<b.first);
    }
    vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {
        vector<int> v;
        vector<pair<int,int>> v1;
        if(mat.size()==0)
            return v;
        for(int i=0;i<mat.size();i++)
        {
            for(int j=0;j<mat[i].size();j++)
            {
                if(mat[i][j]==0)
                {
                    v1.push_back({i,j});
                    break;
                }
                else if(j==mat[i].size()-1)
                {
                    v1.push_back({i,j+1});
                }
                
            }
        }
        sort(v1.begin(),v1.end(),comp);
        for(int i=0;i<k;i++)
        {
            v.push_back(v1[i].first);
        }
        return v;
    }
};
