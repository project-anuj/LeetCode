///linear Search///
class Solution {
public:
    int peakIndexInMountainArray(vector<int>& A) {
        for(int i=1;i<A.size()-1;i++)
        {
            if(A[i]>A[i-1]&&A[i]>A[i+1])
                return i;
        }
        if(A[0]>A[1])
            return 0;
        else if(A[A.size()-1]>A[A.size()-2])
            return (A.size()-1);
        return -1;
    }
};

////Binary Search////
class Solution {
public:
    int peakIndexInMountainArray(vector<int>& A) {
        int start=0;
        int n=A.size();
        int end=n-1;
        while(start<=end)
        {
            int mid=start+(end-start)/2;
            if(mid-1>=0&&A[mid]>A[mid-1]&&mid+1<=n-1&&A[mid]>A[mid+1])
                return mid;
            else if(mid-1>=0&&A[mid]>A[mid-1])
                start=mid+1;
            else if(mid+1<=n-1&&A[mid]>A[mid+1])
                end=mid-1;
        }
        if(A[0]>A[1])
            return 0;
        else if(A[n-1]>A[n-2])
            return n-1;
        return -1;
    }
};
