............................O(n^2)...............................

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> a;
        for(int i=0;i<nums.size();i++)
        {
            for(int j=i+1;j<nums.size();j++)
            {
                if(nums[i]+nums[j]==target)
                {
                    a.push_back(i);
                    a.push_back(j);
                    return a;
                }
            }
        }
        return a;
    }
};

...........................O(nlog(n)).................................

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
      vector<int> v,v1=nums;
        int i=0;
        int j=nums.size()-1;
        sort(nums.begin(),nums.end());
        while(i<j)
        {
            if(nums[i]+nums[j]==target)
            {
                break;
            }
            if(nums[i]+nums[j]<target)
                i++;
            else
                j--;
        }
        int flag1=0,flag2=0;
        for(int k=0;k<nums.size();k++)
        {
            if(nums[i]==v1[k] && flag1==0)
            {
                v.push_back(k);
                flag1=1;
            }
            else if(nums[j]==v1[k]&& flag2==0)
            {
                v.push_back(k);
                flag2=1;
            }
            if(flag1==1&&flag2==1)
                break;
        }
        return v;
    }
};
