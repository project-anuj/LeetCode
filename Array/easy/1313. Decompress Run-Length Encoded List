//.................O(n^2).................

class Solution {
public:
    vector<int> decompressRLElist(vector<int>& nums) {
        vector<int> v;
        for(int i=0;i<nums.size();i++)
        {
            int  freq=nums[i];
            i++;
            int val=nums[i];
            for(int j=0;j<freq;j++)
                v.push_back(val);
        }
        return v;
    }
};

//.....................O(n).........................
class Solution {
public:
    vector<int> decompressRLElist(vector<int>& nums) {
        vector<int>result;
        for(int i = 0; i < nums.size(); i = i+2){
            result.insert(result.end(), nums[i], nums[i+1]);
        }
        return result;
    }
};
